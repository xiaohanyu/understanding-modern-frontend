(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{472:function(a,t,r){"use strict";r.r(t);var e=r(42),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"理解现代前端"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#理解现代前端"}},[a._v("#")]),a._v(" 理解现代前端")]),a._v(" "),r("blockquote",[r("p",[a._v("You cannot understand what is happening today without understanding what\ncame before.")]),a._v(" "),r("p",[a._v("— Steve Jobs")])]),a._v(" "),r("p",[a._v("1980–1990 年，在 CERN（欧洲核子研究中心）工作的 "),r("a",{attrs:{href:"https://www.w3.org/People/Berners-Lee/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Tim Berners-Lee"),r("OutboundLink")],1),a._v(" 博士，为了使 CERN 的研究人员更方便地使用和共享文档，发明了 HTML 和 HTTP。")]),a._v(" "),r("p",[a._v("HTML 的首个公开描述只有描述 18 个元素。")]),a._v(" "),r("p",[a._v("HTTP 协议的第一个 RFC， "),r("a",{attrs:{href:"https://www.w3.org/Protocols/HTTP/AsImplemented.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("HTTP/0.9"),r("OutboundLink")],1),a._v("，只定义了一个只有 "),r("code",[a._v("GET")]),a._v(" 方法。")]),a._v(" "),r("p",[a._v("1995 年 5 月，"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Brendan_Eich",target:"_blank",rel:"noopener noreferrer"}},[a._v("Brendan Eich"),r("OutboundLink")],1),a._v(" 花了十天的时间，设计出了 JavaScript。")]),a._v(" "),r("p",[a._v("1996 年，"),r("a",{attrs:{href:"https://www.w3.org/Style/CSS20/#:~:text=On%20December%2017%2C%201996%2C%20W3C",target:"_blank",rel:"noopener noreferrer"}},[a._v("CSS 1.0"),r("OutboundLink")],1),a._v(" 发布。")]),a._v(" "),r("p",[a._v("HTML/CSS/JavaScript，前端三大件，似乎每一件的诞生都没有什么预定的章法。10 年前，世面上似乎也没有特别正式和专业的前端岗——如果有，基本上也是切图仔——怎么忽然到了 10 年后，前端的发展就一日千里，“洞中方一日，世上已千年”——了呢？")]),a._v(" "),r("blockquote",[r("p",[a._v("每18个月–24个月，前端都会难一倍。")]),a._v(" "),r("p",[a._v("— 前端摩尔定律")])]),a._v(" "),r("p",[a._v("在互联网开发的岗位序列中，前端岗是最不受待见的一个，因为，坦白的讲，10 年前前端的领域知识太浅，护城河太浅，任何一个优秀的后端工程师，如果他愿意，都可以花上一两个月的时间，转变成一个初级的前端工程师，但是反过来就不行啦。")]),a._v(" "),r("p",[a._v("然而时移世易，三十年河东河西，世道变了。前端的学习入门难度陡增，再也不是随便拉过来一个程序员摆弄摆弄就可以上手的了。")]),a._v(" "),r("p",[a._v("我最开始自己尝试做产品，涉及前端的部分就套诸如 bootstrap 之类的框架，简单需求还好，稍复杂一点的设计和想法，改来改去，总是不顺手不合心意，那感觉就像是写文章，反反复复斟酌，最终却总是辞不达意。于是就下了点决心，深入了解下现代前端体系，没想到跳入了神坑，差点爬不出来了。花了两三年的时间，做了几百个页面后，总算是有了一点自信和心得。")]),a._v(" "),r("p",[a._v("因此我很了解，当一个人，学了一点初级的编程，学完了传统的 HTML/CSS，学了一点点的 JavaScript，再想往上深入一层，那种面对一堆概念，无所适从的迷茫感和焦虑感。这也是我决定写这个教程的原因——我要对自己这两三年的学习作个总结，对于遗漏的概念加深下理解，同时如果能够帮助到一些人的话，那就再好不过了。")]),a._v(" "),r("p",[a._v("我有一个理念——学习一个学科的历史，是很好的掌握和理解这个学科的方法。因为在这篇教程中，我假定读者已经掌握了基本的 HTML/CSS/JavaScript 知识，这方面我不再啰嗦——因为这方面的资料实在太多，我就不再多些一举了。我要写的是：")]),a._v(" "),r("ul",[r("li",[a._v("HTTP/0.9，只有一个 "),r("code",[a._v("GET")]),a._v(" 方法，怎么就成了互联网上最重要的基础协议了？")]),a._v(" "),r("li",[a._v("RESTful 到底是怎么回事？什么是 hypermedia？hyper 是什么意思？hypermedia 和 HTML 中的\nhyperlink 有什么联系？")]),a._v(" "),r("li",[a._v("JavaScript 的构建工具链为何如此复杂？ES6 的 "),r("code",[a._v("import")]),a._v(" 和 Node.js 的 "),r("code",[a._v("require")]),a._v(" 有何区别？")]),a._v(" "),r("li",[a._v("CSS 预处理器是什么？CSS in JS 解决了什么问题？")])]),a._v(" "),r("p",[a._v("诸如此类的知识，如果你不去思考 why，只学 how，那么你的知识终究是零散的，不成体系。而我要重点写的，就是这个 why。")]),a._v(" "),r("h2",{attrs:{id:"html"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[a._v("#")]),a._v(" HTML")]),a._v(" "),r("h3",{attrs:{id:"html5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#html5"}},[a._v("#")]),a._v(" HTML5")]),a._v(" "),r("p",[a._v("XHTML 为何失败？")]),a._v(" "),r("h3",{attrs:{id:"hyperlink-与-seo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hyperlink-与-seo"}},[a._v("#")]),a._v(" Hyperlink 与 SEO")]),a._v(" "),r("p",[a._v("Hyper 是什么意思？为何要有良好结构的 HTML？")]),a._v(" "),r("h3",{attrs:{id:"语义化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#语义化"}},[a._v("#")]),a._v(" 语义化")]),a._v(" "),r("h2",{attrs:{id:"css"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[a._v("#")]),a._v(" CSS")]),a._v(" "),r("h3",{attrs:{id:"布局"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[a._v("#")]),a._v(" 布局")]),a._v(" "),r("ul",[r("li",[a._v("Table/Float 布局")]),a._v(" "),r("li",[a._v("Flex 布局")]),a._v(" "),r("li",[a._v("Grid 布局")]),a._v(" "),r("li",[a._v("宏观层面上讲，CSS 的流式布局，与 LaTeX 的离线布局，Adobe Indesign 的可视化布局之间的对比。")])]),a._v(" "),r("h4",{attrs:{id:"grid-system"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#grid-system"}},[a._v("#")]),a._v(" grid system")]),a._v(" "),r("ul",[r("li",[a._v("960.gs")]),a._v(" "),r("li",[a._v("bootstrap")])]),a._v(" "),r("h3",{attrs:{id:"盒模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[a._v("#")]),a._v(" 盒模型")]),a._v(" "),r("h3",{attrs:{id:"字体"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#字体"}},[a._v("#")]),a._v(" 字体")]),a._v(" "),r("ul",[r("li",[a._v("web font")]),a._v(" "),r("li",[a._v("font based icon")]),a._v(" "),r("li",[a._v("font 的版权")])]),a._v(" "),r("h3",{attrs:{id:"预处理器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#预处理器"}},[a._v("#")]),a._v(" 预处理器")]),a._v(" "),r("h3",{attrs:{id:"模块化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[a._v("#")]),a._v(" 模块化")]),a._v(" "),r("ul",[r("li",[a._v("CSS in JS")])]),a._v(" "),r("h3",{attrs:{id:"响应式设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#响应式设计"}},[a._v("#")]),a._v(" 响应式设计")]),a._v(" "),r("ul",[r("li",[a._v("响应式设计的诞生")]),a._v(" "),r("li",[a._v("mobile first")])]),a._v(" "),r("h2",{attrs:{id:"javascript"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[a._v("#")]),a._v(" JavaScript")]),a._v(" "),r("h3",{attrs:{id:"closure-闭包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#closure-闭包"}},[a._v("#")]),a._v(" Closure 闭包")]),a._v(" "),r("ul",[r("li",[a._v("闭包在 JavaScript 中为何如此重要？")]),a._v(" "),r("li",[a._v("用闭包模拟 OOP")]),a._v(" "),r("li",[a._v("lexical scope/dynamic scope")])]),a._v(" "),r("h3",{attrs:{id:"why-json-over-xml"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#why-json-over-xml"}},[a._v("#")]),a._v(" Why JSON over XML")]),a._v(" "),r("ul",[r("li",[a._v("Why JSON win?")])]),a._v(" "),r("h3",{attrs:{id:"oop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#oop"}},[a._v("#")]),a._v(" OOP")]),a._v(" "),r("h3",{attrs:{id:"异步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[a._v("#")]),a._v(" 异步")]),a._v(" "),r("h4",{attrs:{id:"promise"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[a._v("#")]),a._v(" Promise")]),a._v(" "),r("ul",[r("li",[a._v("Promise/future，其余语言中的实现和对比")])]),a._v(" "),r("h4",{attrs:{id:"async-await"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[a._v("#")]),a._v(" Async/await")]),a._v(" "),r("ul",[r("li",[a._v("Continuation/coroutine/generator")])]),a._v(" "),r("h3",{attrs:{id:"模块化-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#模块化-2"}},[a._v("#")]),a._v(" 模块化")]),a._v(" "),r("ul",[r("li",[a._v("JavaScript 的模块化和其他语言的模块化之间到底有何不同？")])]),a._v(" "),r("h3",{attrs:{id:"npm-生态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#npm-生态"}},[a._v("#")]),a._v(" npm 生态")]),a._v(" "),r("ul",[r("li",[a._v("node_modules 为何动不动就有成百上千个包？")])]),a._v(" "),r("h2",{attrs:{id:"前端工程化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化"}},[a._v("#")]),a._v(" 前端工程化")]),a._v(" "),r("h3",{attrs:{id:"史前时代"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#史前时代"}},[a._v("#")]),a._v(" 史前时代")]),a._v(" "),r("h3",{attrs:{id:"bower-npm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bower-npm"}},[a._v("#")]),a._v(" bower/npm")]),a._v(" "),r("h3",{attrs:{id:"grunt-gulp-yeoman"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#grunt-gulp-yeoman"}},[a._v("#")]),a._v(" grunt/gulp/yeoman")]),a._v(" "),r("h3",{attrs:{id:"webpack-集大成者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webpack-集大成者"}},[a._v("#")]),a._v(" webpack 集大成者")]),a._v(" "),r("h2",{attrs:{id:"http"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[a._v("#")]),a._v(" HTTP")]),a._v(" "),r("h3",{attrs:{id:"http-0-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#http-0-9"}},[a._v("#")]),a._v(" HTTP 0.9")]),a._v(" "),r("h3",{attrs:{id:"restful"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#restful"}},[a._v("#")]),a._v(" RESTful")]),a._v(" "),r("ul",[r("li",[a._v("到底要不要遵循 RESTful API 的设计？")]),a._v(" "),r("li",[a._v("REpresentational State Transfer 到底是什么意思？")]),a._v(" "),r("li",[a._v("Hypermedia 是什么？")]),a._v(" "),r("li",[a._v("为什么要尽量遵循 RESTful 的设计？Convertion over Configuration。")])]),a._v(" "),r("h3",{attrs:{id:"ajax"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[a._v("#")]),a._v(" Ajax")]),a._v(" "),r("h3",{attrs:{id:"https"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[a._v("#")]),a._v(" HTTPs")]),a._v(" "),r("h2",{attrs:{id:"dns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[a._v("#")]),a._v(" DNS")]),a._v(" "),r("ul",[r("li",[a._v("跨域请求")])]),a._v(" "),r("h2",{attrs:{id:"browser"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#browser"}},[a._v("#")]),a._v(" Browser")]),a._v(" "),r("h3",{attrs:{id:"chrome-devtools"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#chrome-devtools"}},[a._v("#")]),a._v(" Chrome devtools")]),a._v(" "),r("ul",[r("li",[a._v("Firebug 哪里去了？")])])])}),[],!1,null,null,null);t.default=s.exports}}]);